@using EntityLayer.Entities;
@using EntityLayer;
@using Newtonsoft.Json;
@{
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@section Links{
	<link rel="stylesheet" href="~/css/Table.css" />
	<style>

		body {
			font: 90%/1.45em "Helvetica Neue", HelveticaNeue, Verdana, Arial, Helvetica, sans-serif;
			margin: 0;
			padding: 0;
			color: #333;
			background-color: #fff;
		}

		table.dataTable tbody tr.stripe1 {
			background-color: #E8E8E8;
		}

		table.dataTable tbody tr.stripe2 {
			background-color: #c0c0c0;
			border-bottom: solid #c0c0c0;
		}

	</style>
}

	@model List<Expens>

	@if (Model.Count > 0)
	{
		<div class="table-responsive">
			<table class="display nowrap text-dark" id="myTable">
				<thead class="table-primary">
					<tr>
						<th>Gider Açıklaması</th>
						<th>Gider Fiyatı</th>
						<th>Tarih</th>
						@if (ViewBag.Role < Rol.Teacher)
						{
							<th>Şube</th>
							<th>Güncelle</th>
							<th>Sil</th>
						}
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model)
					{
						<tr>
							<td>@item.Description</td>
							<td>@item.ExpensPrice</td>
							<td>@item.ExpensDate</td>
							@if (ViewBag.Role <Rol.Teacher)
							{
								<td>@item.Branch.BranchName</td>
								<td>
									<a class="btn btn-warning" asp-action="UpdateExpens" asp-controller="Expenses" asp-route-id="@item.ExpensId">Güncelle</a>
								</td>
								<td>
									<a class="btn btn-danger" asp-action="DeleteExpens" asp-controller="Expenses" asp-route-id="@item.ExpensId">Sil</a>
								</td>
							}
						</tr>
					}
				</tbody>
			</table>
		</div>
	}



else
	{
<div class="alert alert-warning">
	Listelenecek Gider Bulunamadı...
</div>
	}
@if (ViewBag.Role <Rol.Teacher)
{
	<a class="btn btn-primary mt-3" asp-action="CreateExpens" asp-controller="Expenses">
		<i class="fa fa-plus"></i>
		<span>Gider Ekle</span>
	</a>
}
@section Scripts{
	<script src="~/js/dataTables.min.js"></script>
	<script>
		let table = new DataTable("#myTable");
	</script>
	@if (TempData["Errors"] != null)
	{
		var errors = JsonConvert.DeserializeObject<List<Error>>(TempData["Errors"] as string);
		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		<script>
			let errors = [];
			for (let i = 0; i < @errors.Count; i++) {
				errors.push({
					"description": "@errors[0].Description"
				})
			}
			for (let error of errors) {
				Swal.fire({
					position: "top-end",
					icon: "success",
					title: `${error.description}`,
					showConfirmButton: false,
					timer: 1500
				});
			}
		</script>

	}
}