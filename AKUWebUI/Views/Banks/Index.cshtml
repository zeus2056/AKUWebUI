@using EntityLayer.Entities;
@using Newtonsoft.Json;
@{
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@model List<Bank>
@section Links{
	<link rel="stylesheet" href="~/css/Table.css" />
	<style>

		body {
			font: 90%/1.45em "Helvetica Neue", HelveticaNeue, Verdana, Arial, Helvetica, sans-serif;
			margin: 0;
			padding: 0;
			color: #333;
			background-color: #fff;
		}

		table.dataTable tbody tr.stripe1 {
			background-color: #E8E8E8;
		}

		table.dataTable tbody tr.stripe2 {
			background-color: #c0c0c0;
			border-bottom: solid #c0c0c0;
		}

	</style>

}
@if (Model.Count > 0)
{
	<div class="table-responsive" >
		<table class="display nowrap text-dark" id="myTable">
			<thead class="table-primary">
				<tr>
					<th>Banka Adı</th>
					@if (ViewBag.Role)
					{
						<th>Güncelle</th>
						<th>Sil</th>
						<th>Rapor İşlemleri</th>
					}
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr>
						<td>@item.BankName</td>
						@if (ViewBag.Role)
						{
							<td>
								<a class="btn btn-warning" asp-action="UpdateBank" asp-controller="Banks" asp-route-slug="@item.Slug">Güncelle</a>
							</td>
							<td>
								<a class="btn btn-danger" asp-action="DeleteBank" asp-controller="Banks" asp-route-slug="@item.Slug">Sil</a>
							</td>
							<td>
								<a class="btn btn-success me-2" asp-action="ShowAllBanksRapor" asp-controller="Banks" asp-route-slug="@item.Slug">Tüm Ödeme Rapor</a>
								<a class="btn btn-primary" asp-action="ShowFilteredBanksRapor" asp-controller="Banks" asp-route-slug="@item.Slug">Tarih Filtreli Rapor</a>
							</td>
							
						}
					</tr>
				}
			</tbody>
		</table>
	</div>
}
else
{
	<div class="alert alert-warning alert-dismissible">
		<button class="btn-close" data-bs-dismiss="alert"></button>
		Listelenecek Banka Yok...
	</div>
}
@if (ViewBag.Role)
{
	<a class="btn btn-primary mt-3" asp-action="CreateBank" asp-controller="Banks">
		<i class="fa fa-plus"></i>
		<span>Banka Ekle</span>
	</a>
}

@section Scripts{
	<script src="~/js/dataTables.min.js"></script>
	<script>
		let table = new DataTable("#myTable");
	</script>
	@if (TempData["Errors"] != null)
	{
		var errors = JsonConvert.DeserializeObject<List<Error>>(TempData["Errors"] as string);
		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		<script>
			let errors = [];
			for (let i = 0; i < @errors.Count; i++) {
				errors.push({
					"description": "@errors[0].Description"
				})
			}
			for (let error of errors) {
				Swal.fire({
					position: "top-end",
					icon: "success",
					title: `${error.description}`,
					showConfirmButton: false,
					timer: 1500
				});
			}
		</script>

	}
}